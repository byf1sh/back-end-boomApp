generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Boat {
  boat_id   Int      @id @default(autoincrement())
  boat_name String   @db.VarChar(255)
  capacity  Int
  reservations Reservation[]
  cancel_reservations Cancel_Reservation[]
  reviews   Review[]
}

model User {
  id                 Int                 @id @default(autoincrement())
  name               String
  email              String              @unique(map: "User_email_key")
  password           String
  reservations       Reservation[]
  cancel_reservations Cancel_Reservation[]
  otps               Otp[]               // Relasi one-to-many ke model Otp
  reviews            Review[]
}

model Reservation {
  rsv_id           Int      @id @default(autoincrement())
  boat_id          Int
  user_id          Int
  rsv_datetime     DateTime @default(now())  // Tambahkan default value
  rsv_datetime_end     DateTime @default(now())  // Tambahkan default value
  number_of_people Int

  boat   Boat   @relation(fields: [boat_id], references: [boat_id])
  user   User   @relation(fields: [user_id], references: [id])
}

model Cancel_Reservation {
  cancel_id        Int      @id @default(autoincrement())
  boat_id          Int
  user_id          Int
  rsv_id           Int
  rsv_datetime     DateTime
  rsv_datetime_end DateTime
  number_of_people Int
  canceled_at      DateTime @default(now()) // Menyimpan kapan reservasi dibatalkan

  boat   Boat   @relation(fields: [boat_id], references: [boat_id])
  user   User   @relation(fields: [user_id], references: [id])
}

model Otp {
  id        Int      @id @default(autoincrement())
  userId    Int
  otp       String
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  // Relasi dengan model User
  user      User     @relation(fields: [userId], references: [id]) // Foreign Key

  @@index([userId]) // Opsional: Untuk performa, buat index pada userId
}

model Review {
  id        Int      @id @default(autoincrement())
  boat_id   Int
  user_id   Int
  rating    Int
  comment   String?
  createdAt DateTime @default(now())

  // Relasi ke Boat dan User
  boat      Boat     @relation(fields: [boat_id], references: [boat_id])
  user      User     @relation(fields: [user_id], references: [id])
}
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Boat {
  boat_id   Int      @id @default(autoincrement())
  boat_name String   @db.VarChar(255)
  capacity  Int
  price     Int      @default(500000)  // Menambahkan default value
  reservations Reservation[]
}

model User {
  id                 Int                 @id @default(autoincrement())
  name               String
  email              String              @unique(map: "User_email_key")
  password           String
  gender             String?              
  phone              String?              
  city               String?              
  birth              DateTime?              

  reservations       Reservation[]
  otps               Otp[]               // Relasi one-to-many ke model Otp
  reviews            Review[]
}

model Reservation {
  rsv_id            Int      @id @default(autoincrement())
  boat_id           Int
  user_id           Int
  rsv_datetime      DateTime @default(now())
  rsv_datetime_end  DateTime @default(now())
  number_of_people  Int
  payment_method    String   @default("Transfer")
  paid              Boolean  @default(false)
  status            String   @default("On Going")

  boat   Boat   @relation(fields: [boat_id], references: [boat_id])
  user   User   @relation(fields: [user_id], references: [id])

  reviews Review[]
}

model Otp {
  id        Int      @id @default(autoincrement())
  userId    Int
  otp       String
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  // Relasi dengan model User
  user      User     @relation(fields: [userId], references: [id]) // Foreign Key

  @@index([userId]) // Opsional: Untuk performa, buat index pada userId
}

model Review {
  id        Int      @id @default(autoincrement())
  rsv_id    Int      // Foreign key mengacu ke Reservation
  user_id   Int
  rating    Int
  comment   String?
  createdAt DateTime @default(now())

  reservation Reservation @relation(fields: [rsv_id], references: [rsv_id])
  user        User        @relation(fields: [user_id], references: [id])
}

model News {
  id        Int      @id @default(autoincrement())
  url_foto  String
  title     String
  location  String
  content   String
  createdAt DateTime @default(now())
}
